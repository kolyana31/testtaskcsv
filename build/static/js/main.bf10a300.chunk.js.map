{"version":3,"sources":["logo.svg","utils/helpers.js","components/csvReader.jsx","App.js","reportWebVitals.js","index.js"],"names":["getType","key","res","typeList","find","el","toLowerCase","type","valFuc","FullName","phone","test","email","age","Number","isInteger","exp","incomeValue","toFixed","trim","data","toUpperCase","License","result","arr","split","resultArr","forEach","undefined","statesList","el2","abbreviation","name","push","length","Array","from","Set","join","date","arr1match","match","arr2match","Date","CSVTable","React","useState","columns","setColumns","inform","setInform","errText","setErrorText","className","accept","onFileLoaded","cols","filter","Promise","resolve","reject","TMPObj","resValue","resValue2","TMParr","slice","i","id","validated","String","Age","Duplicated","Email","Phone","formInfo","then","catch","parserOptions","header","dynamicTyping","skipEmptyLines","title","map","innerEl","i2","Object","values","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf10a300.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport statesList from \"../assets/json/stateList.json\";\r\n\r\nconst ValidateAge = (age) =>{\r\n    if (+age && Number.isInteger(+age) && +age>21) {\r\n        return age\r\n    }\r\n    return null;\r\n}\r\n\r\nconst ValidateExperience = (exp,age) =>{\r\n    if (+age && +exp && +exp>=0 && +exp<+age) {\r\n        return exp\r\n    }\r\n    return null;\r\n} \r\n\r\nconst ValidateYearlyIncome = (incomeValue)=>{\r\n    if ( +incomeValue && +incomeValue>0 && +incomeValue<1000000 ) {\r\n        return new Number(incomeValue).toFixed(2);\r\n    }\r\n    else if(!incomeValue?.trim()){\r\n        return \"00.00\"\r\n    }\r\n    return null;\r\n}\r\n\r\nconst ValidateChilds = (data)=>{\r\n    if ( data.toLowerCase()===\"true\"|| data.toLowerCase()===\"false\" ) {\r\n        return data.toUpperCase();\r\n    }\r\n    else if(!data?.trim()){\r\n        return \"FALSE\";\r\n    }\r\n    return null;\r\n}\r\n\r\nconst validateEmail = (email) => {\r\n    if(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n        return email;\r\n    };\r\n    return null;\r\n}\r\n\r\nconst validatePhone = (phone)=>{\r\n    if(/^(\\(\\d{3}\\)|\\d{3})[\\s\\-]?\\d{3}[\\s\\-]?\\d{4}$/.test(phone)){\r\n        return \"+1\"+phone;\r\n    }\r\n    else if(/^(1\\s?)?(\\(\\d{3}\\)|\\d{3})[\\s\\-]?\\d{3}[\\s\\-]?\\d{4}$/.test(phone)){\r\n        return \"+\" + phone;\r\n    }\r\n    else if(/^\\+?(1\\s?)?(\\(\\d{3}\\)|\\d{3})[\\s\\-]?\\d{3}[\\s\\-]?\\d{4}$/.test(phone)){\r\n        return phone;\r\n    }\r\n    return null;\r\n}\r\n\r\nconst validateExpDate = (date)=>{\r\n    const arr1match = date.match(/^([0-9]{2})\\/([0-9]{2})\\/([0-9]{4})$/); // MM/DD/YYYY\r\n    const arr2match = date.match(/^([0-9]{4})\\-([0-9]{2})\\-([0-9]{2})$/); // YYYY-MM-DD\r\n   \r\n    if (((arr1match && +arr1match[1]<=12 && +arr1match[2]<=31 && arr1match[3]!=\"0000\") ||\r\n         (arr2match && arr2match[1]!=\"0000\" && +arr2match[2]<=12 && +arr2match[3]<=31)) &&\r\n         new Date(date) > new Date()) {\r\n        return date;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nconst validateFullName = (FullName)=>{\r\n    return FullName;\r\n}\r\n\r\nconst validateLicenseStates = (License)=>{\r\n    let arr = License.split(\"|\"), result,resultArr=[];\r\n    arr.forEach(el => {\r\n        result = statesList.find(el2=>el?.trim()==el2.abbreviation || el?.trim()==el2.name);        \r\n        \r\n        if (result!==undefined){\r\n            resultArr.push(result.abbreviation)\r\n        }\r\n    });\r\n\r\n    if (resultArr?.length>0) {\r\n        return (Array.from(new Set(resultArr))).join(\",\")\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nconst validateLicenseNumber = (License)=>{\r\n    if (/^\\w{6}$/.test(License)) {\r\n        return License;\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\nexport const getType = (key) =>{\r\n    let res = typeList.find(el=>\r\n        el.key.toLowerCase() === key.toLowerCase() \r\n    );\r\n\r\n    return {\r\n        type: res?.type,\r\n        valFuc: res?.valFuc\r\n    }\r\n}\r\n\r\nconst typeList = [\r\n    {\r\n        key:\"Full Name\",\r\n        type:1,\r\n        valFuc:validateFullName\r\n    },\r\n    {\r\n        key:\"Phone\",\r\n        type:2,\r\n        valFuc:validatePhone\r\n    },\r\n    {\r\n        key:\"Email\",\r\n        type:3,\r\n        valFuc:validateEmail\r\n    },\r\n    {\r\n        key:\"age\",\r\n        type:4,\r\n        valFuc:ValidateAge\r\n    },\r\n    {\r\n        key:\"Experience\",\r\n        type:5,\r\n        valFuc:ValidateExperience\r\n    },\r\n    {\r\n        key:\"Yearly Income\",\r\n        type:6,\r\n        valFuc:ValidateYearlyIncome\r\n    },\r\n    {\r\n        key:\"Has children\",\r\n        type:7,\r\n        valFuc:ValidateChilds\r\n    },\r\n    {\r\n        key:\"License states\",\r\n        type:8,\r\n        valFuc:validateLicenseStates\r\n    },\r\n    {\r\n        key:\"Expiration date\",\r\n        type:9,\r\n        valFuc:validateExpDate\r\n    },\r\n    {\r\n        key:\"License number\",\r\n        type:10,\r\n        valFuc:validateLicenseNumber\r\n    }\r\n]","import React from \"react\";\r\nimport { csv } from \"d3\";\r\nimport CSVReader from \"react-csv-reader\";\r\n\r\nimport \"./csvReader.css\";\r\n\r\nimport { getType } from \"../utils/helpers\";\r\n\r\nconst formInfo = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    let TMParr = [],\r\n      TMPObj,\r\n      resValue,\r\n      resValue2,\r\n      resultArr = [];\r\n    data.slice(1, data.length - 1).forEach((el, i) => {\r\n      TMParr.push({\r\n        id: i + 1,\r\n        validated: true,\r\n      });\r\n      for (const key in el) {\r\n        TMPObj = getType(key);\r\n        if (TMPObj.type !== 5) {\r\n          resValue = TMPObj.valFuc(\r\n            el[key] !== null ? String(el[key]).trim() : \"\"\r\n          );\r\n        } else {\r\n          resValue = TMPObj.valFuc(\r\n            el[key] !== null ? String(el[key]).trim() : \"\",\r\n            el?.Age ? String(el.Age).trim() : \"\"\r\n          );\r\n        }\r\n\r\n        if (resValue) {\r\n          TMParr.push({\r\n            [key]: resValue,\r\n            validated: true,\r\n          });\r\n        } else {\r\n          TMParr.push({\r\n            [key]: el[key] !== null ? String(el[key]).trim() : \"\",\r\n            validated: false,\r\n          });\r\n        }\r\n      }\r\n      TMParr.push({\r\n        Duplicated: \"\",\r\n        validated: true,\r\n      });\r\n      resultArr.push(TMParr);\r\n      TMParr = [];\r\n      resValue = [];\r\n    });\r\n\r\n    resultArr.forEach((el) => {\r\n      resValue = resultArr.find(\r\n        (el2) =>\r\n          el2[3].Email.toLowerCase() == el[3].Email.toLowerCase() &&\r\n          el2[0].id != el[0].id\r\n      );\r\n\r\n      resValue2 = resultArr.find(\r\n        (el2) => el2[2].Phone == el[2].Phone && el2[0].id != el[0].id\r\n      );\r\n\r\n      if (resValue?.length > 0) {\r\n        el[3].validated = false;\r\n        el[el.length - 1].Duplicated = resValue[0].id;\r\n      } else if (resValue2?.length > 0) {\r\n        el[2].validated = false;\r\n        el[el.length - 1].Duplicated = resValue2[0].id;\r\n      }\r\n    });\r\n\r\n    resolve(resultArr);\r\n  });\r\n};\r\n\r\nexport const CSVTable = () => {\r\n  const [columns, setColumns] = React.useState(null);\r\n  const [inform, setInform] = React.useState(null);\r\n\r\n  const [errText, setErrorText] = React.useState(\"No file Loaded\");\r\n\r\n  const handleForce = (data) => {\r\n    let cols = [];\r\n    for (const key in data[0]) {\r\n      cols.push(key);\r\n    }\r\n\r\n    if (\r\n      cols.filter(\r\n        (el) =>\r\n          el.toLowerCase() === \"full name\" ||\r\n          el.toLowerCase() === \"phone\" ||\r\n          el.toLowerCase() === \"email\"\r\n      ).length !== 3\r\n    ) {\r\n      setErrorText(\"File format is not correct\");\r\n      setColumns(null);\r\n      setInform(null);\r\n      return;\r\n    }\r\n    setColumns(cols);\r\n    formInfo(data).then((data)=>{\r\n      setInform(data);\r\n    }).catch((el)=>{\r\n      setColumns(null);\r\n      setInform(null);\r\n      setErrorText(\"Error proccesing data\")\r\n    })\r\n   \r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n    >\r\n      <div className=\"input__style\">\r\n        <CSVReader\r\n          accept=\".csv\"\r\n          onFileLoaded={handleForce}\r\n          parserOptions={{\r\n            header: true,\r\n            dynamicTyping: true,\r\n            skipEmptyLines: true,\r\n          }}\r\n        />\r\n      </div>\r\n      \r\n      {columns?.length > 0 && inform?.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th title=\"id\">id</th>\r\n              {columns.map((el, i) => {\r\n                return (\r\n                  <th key={el + i} title={el}>\r\n                    {el}\r\n                  </th>\r\n                );\r\n              })}\r\n              <th title=\"id\">Duplicated with</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {inform.map((el, i) => {\r\n              return (\r\n                <tr key={el + i}>\r\n                  {el.map((innerEl, i2) => {\r\n                    innerEl = Object.values(innerEl);\r\n                    return (\r\n                      <td\r\n                        key={i2}\r\n                        className={innerEl[1] ? \"\" : \"incorectTd\"}\r\n                        title={innerEl[0]}\r\n                      >\r\n                        {innerEl[0]}\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <span className=\"warning__span\">{errText}</span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import logo from './logo.svg';\nimport React from \"react\";\nimport './App.css';\n\nimport { CSVTable } from \"./components/csvReader\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <CSVTable/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}